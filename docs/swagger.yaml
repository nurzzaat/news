basePath: /
definitions:
  models.CategoryRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.CategoryResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.NewsResponse:
    properties:
      author:
        $ref: '#/definitions/models.UserResponse'
      category:
        $ref: '#/definitions/models.CategoryResponse'
      content:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      thumbnail:
        type: string
      title:
        type: string
      views:
        type: integer
    type: object
  models.SuccessResponse:
    properties:
      result: {}
    type: object
  models.UserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: webfinalapi.mobydev.kz
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /categories:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryResponse'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - News
  /categories/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - News
  /category:
    post:
      parameters:
      - description: category
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/models.CategoryRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - News
  /category/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - News
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: category
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/models.CategoryRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - News
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /news:
    get:
      parameters:
      - description: order by (1-latest,2-older,3-popular)
        in: query
        name: order
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.NewsResponse'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - News
    post:
      parameters:
      - description: Title
        in: formData
        name: title
        required: true
        type: string
      - description: Content
        in: formData
        name: content
        required: true
        type: string
      - description: CategoryId
        in: formData
        name: categoryId
        required: true
        type: integer
      - description: thumbnail
        in: formData
        name: thumbnail
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - News
  /news/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - News
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewsResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - News
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Title
        in: formData
        name: title
        type: string
      - description: Content
        in: formData
        name: content
        type: string
      - description: CategoryId
        in: formData
        name: categoryId
        type: integer
      - description: thumbnail
        in: formData
        name: thumbnail
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - News
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: SignUp
      tags:
      - auth
  /user/profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
